'use client'

import {useEffect, useState} from 'react'

import Loading from '../ui/loading.js'

import {getExploitation} from '@/app/api/points-prelevement.js'
import ExploitationListItem from '@/components/exploitations/exploitation-list-item.js'
import BorderedSection from '@/components/ui/bordered-section.js'
import {getExploitationCreationURL} from '@/lib/urls.js'

const ExploitationsSection = ({exploitations}) => {
  const [detailedExploitations, setDetailedExploitations] = useState([])
  const [isLoading, setIsLoading] = useState(true)
  const [fetchError, setFetchError] = useState(null)

  useEffect(() => {
    const fetchDetails = async () => {
      if (exploitations && exploitations.length > 0) {
        try {
          const results = await Promise.all(
            exploitations.map(async exploitation => {
              const result = await getExploitation(exploitation.id_exploitation)
              if (!result) {
                throw new Error(`Exploitation ${exploitation.id_exploitation} introuvable`)
              }

              return result
            })
          )
          setDetailedExploitations(results)
          setIsLoading(false)
        } catch (error) {
          setFetchError(error)
        }
      } else {
        setIsLoading(false)
      }
    }

    fetchDetails()
  }, [exploitations])

  if (fetchError) {
    throw fetchError
  }

  return (
    <BorderedSection
      title='Exploitations'
      linkPath={getExploitationCreationURL()}
      icon='add-line'
      buttonLabel='CrÃ©er une exploitation'
    >
      {isLoading ? (
        <Loading />
      ) : (
        detailedExploitations.length > 0 ? (
          detailedExploitations.map(exploitation => (
            <ExploitationListItem key={exploitation._id} exploitation={exploitation} />
          ))
        ) : (
          <p className='mt-4 text-gray-500'>Aucune exploitation</p>
        )
      )}
    </BorderedSection>
  )
}

export default ExploitationsSection
