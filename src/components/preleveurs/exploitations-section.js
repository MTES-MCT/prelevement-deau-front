'use client'

import {useEffect, useState} from 'react'

import Alert from '@codegouvfr/react-dsfr/Alert'

import Loading from '../ui/loading.js'

import {getExploitation} from '@/app/api/points-prelevement.js'
import ExploitationListItem from '@/components/exploitations/exploitation-list-item.js'
import BorderedSection from '@/components/ui/bordered-section.js'

const ExploitationsSection = ({exploitations}) => {
  const [detailedExploitations, setDetailedExploitations] = useState([])
  const [error, setError] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  useEffect(() => {
    const fetchDetails = async () => {
      setIsLoading(true)

      if (exploitations && exploitations.length > 0) {
        const results = await Promise.all(
          exploitations.map(async exploitation => {
            try {
              const result = await getExploitation(exploitation.id_exploitation)

              return result
            } catch (error) {
              console.error(error)
              setError('Erreur lors de la récupération des exploitations')
            }
          })
        )
        setDetailedExploitations(results.filter(e => e !== null))
        setIsLoading(false)
      }
    }

    fetchDetails()
  }, [exploitations])

  return (
    <BorderedSection
      title='Exploitations'
      linkPath='/exploitations/new'
      icon='add-line'
      buttonLabel='Créer une exploitation'
    >
      {isLoading && <Loading />}

      {!isLoading && (
        error ? (
          <Alert severity='error' className='mt-4' description={error} />
        ) : (detailedExploitations.length > 0 ? (
          detailedExploitations.map(exploitation => (
            <ExploitationListItem key={exploitation._id} exploitation={exploitation} />
          ))
        ) : (
          <Alert severity='info' className='mt-4' description='Aucune exploitation' />
        ))
      )}
    </BorderedSection>
  )
}

export default ExploitationsSection
